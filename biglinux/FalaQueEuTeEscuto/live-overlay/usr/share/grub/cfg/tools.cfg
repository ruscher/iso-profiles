function ventoy_cli_console {
    if [ -z "$vtoy_display_mode" ]; then
        terminal_output  console
    elif [ "$vtoy_display_mode" = "GUI" ]; then
        terminal_output  console
    fi
}


submenu "Tools" --class tools-menu {
    menuentry "Return to main menu" --class=return-main {
        configfile ($root)/boot/grub/grub.cfg
    }
    
    menuentry "Reset defaults" --class=reset-default {
        reset_defaults
        configfile ($root)/boot/grub/grub.cfg        
    }

    # Verifica se o sistema é EFI ou não para o teste de memória
    if ! is_efi; then
        if [ -f /boot/memtest ]; then
            menuentry "Run Memory Testing Tool (memtest86+)" --class memtest86 --class gnu --class tool {
                linux16 /boot/memtest
            }
        fi
    elif is_efi; then
        if [ -f /boot/memtest-efi ]; then
            menuentry "Run Memory Testing Tool (memtest86+)" --class memtest86 --class gnu --class tool {
                linux16 /boot/memtest-efi
            }
        fi
    fi

    if is_efi; then
        menuentry "UEFI Firmware" --class bios {
            fwsetup
        }
    fi

    if is_efi; then
        submenu --class=find.efi --hotkey=f "Detect EFI bootloaders" {
            efi_found=false

            for efi in (*,gpt*)/efi/*/*.efi (*,gpt*)/efi/*/*/*.efi (*,gpt*)/*.efi (*,gpt*)/*/*.efi; do
                regexp --set=1:efi_device '^\((.*)\)/' "${efi}"
                if [ -e "${efi}" ]; then
                    efi_found=true
                    menuentry --class=efi "${efi}" "${efi_device}" {
                        root="${2}"
                        chainloader "${1}"
                    }
                fi
            done

            if [ "${efi_found}" != true ]; then
                menuentry --hotkey=q --class=find.none "No EFI files detected." { menu_reload }
            else
                menuentry --hotkey=q --class=cancel "Cancel" { menu_reload }
            fi
        }
    fi

    if [ -n "$clinput" ]; then
        menuentry --class=edit "$clinput" {
            if [ -n "$1" ]; then
                clinput="$@"
            else
                unset clinput
            fi
            menu_reload
        }
    fi    

    menuentry "Hardware Info" --class=utilities {
        smbios -t 4 -s 0x10 --set=cpu_brand
        
        set system_vendor="-";
        smbios -t 1 -s 0x04 --set=system_vendor;
        set system_product="-";
        smbios -t 1 -s 0x05 --set=system_product;
        set system_version="-";
        smbios -t 1 -s 0x06 --set=system_version;

        set board_vendor="-";
        smbios -t 2 -s 0x04 --set=board_vendor;
        set board_product="-";
        smbios -t 2 -s 0x05 --set=board_product;
        set board_version="-";
        smbios -t 2 -s 0x06 --set=board_version;

        set bios_vendor="-";
        smbios -t 0 -s 0x04 --set=bios_vendor;
        set bios_version="-";
        smbios -t 0 -s 0x05 --set=bios_ver;
        set bios_date="-";
        smbios -t 0 -s 0x08 --set=bios_date;
        set bios_size="-";
        smbios -t 0 -b 0x09 --set=bios_size;
        
        
        echo "Platform                $grub_cpu-$grub_platform"    
        if [ "$grub_platform" != "pc" ]; then
            echo "UEFI Version            $grub_uefi_version"
            if vt_check_secureboot_var; then
                echo "Secure Boot             Enabled"
            else
                echo "Secure Boot             Disabled"
            fi
        fi
        
        echo ""    
        echo "CPU Model               $cpu_brand"
        echo "Physical RAM            $grub_total_ram MB"
                                    
        echo ""                       
        echo "Manufacture             $system_vendor"
        echo "Product Name            $system_product"
        echo "Version                 $system_version"
                                    
        echo ""                       
        echo "Board Manufacture       $board_vendor"
        echo "Board Name              $board_product"
        echo "Board Version           $board_version"
                                    
        echo ""                       
        echo "BIOS Manufacture        $bios_vendor"
        echo "BIOS Version            $bios_ver"
        echo "BIOS Date               $bios_date"
        echo "BIOS ROM Size           $bios_size"
        
        
        echo -en "\n\n\n$VTLANG_ENTER_EXIT ..."
        read vtInputKey

        read key

    }

    menuentry "Verify Checksums" --class efi {
            echo -en "\nPlease wait... Verifying files integrity using md5sum.\n"
            echo ""
            md5sum -p /manjaro/x86_64/ -c /manjaro/x86_64/livefs.md5
            echo ""
            md5sum -p /manjaro/x86_64/ -c /manjaro/x86_64/mhwdfs.md5
            echo ""
            md5sum -p /manjaro/x86_64/ -c /manjaro/x86_64/desktopfs.md5
            echo ""
            md5sum -p /manjaro/x86_64/ -c /manjaro/x86_64/rootfs.md5
            echo -en "\n\nVerification complete! Press ENTER to exit..."   
            read key
    }
    
    menuentry "File Browser" --class submenu {
        insmod ls
        insmod configfile
        insmod echo
        insmod parttool
        insmod search
        insmod ext2  # Adicione outros módulos de sistemas de arquivos conforme necessário       
        configfile ($root)/boot/grub/browser.cfg
    }
    
    menuentry "Restart computer" --class=reboot {
        reboot
    }
    
    menuentry "Shutdown computer" --class=shutdown {
        halt
    }    
    
}
    

